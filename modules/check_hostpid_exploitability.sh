#!/bin/bash

# ================================
# Check for Exploitable HostPID
# ================================

check_hostpid_exploitability() {
    log "Checking for exploitable HostPID settings..." INFO
    log "Starting check_hostpid_exploitability." INFO

    for ns in $(get_namespaces); do
        log "Scanning for exploitable HostPID settings in namespace '$ns'..." INFO
        local ns_dir="$OUTPUT_DIR/$ns/hostpid_exploitability"

        if [ "$DRY_RUN" = "true" ]; then
            log "[DRY-RUN] Would create directory $ns_dir and check for HostPID settings in namespace '$ns'." WARN
            continue
        fi

        mkdir -p "$ns_dir" || { log "Error: Failed to create directory $ns_dir." ERROR; continue; }

        # Find pods using hostPID
        if kubectl get pods -n "$ns" -o json | jq -r '
            .items[] |
            select(has("spec") and .spec.hostPID == true) |
            "Pod: \(.metadata.name), Containers: \(.spec.containers[].name)"
        ' > "$ns_dir/hostpid_pods.txt" 2>/dev/null; then
            if [[ -s "$ns_dir/hostpid_pods.txt" ]]; then
                log "Pods with hostPID enabled found in namespace '$ns'. See $ns_dir/hostpid_pods.txt." WARN
            else
                log "No pods with hostPID enabled found in namespace '$ns'." SUCCESS
                rm -f "$ns_dir/hostpid_pods.txt"
            fi
        else
            log "Failed to retrieve pod configurations in namespace '$ns'." ERROR
            rm -f "$ns_dir/hostpid_pods.txt"
        fi

        # Find workloads (deployments, daemonsets, statefulsets) using hostPID
        local workloads=("deployments" "daemonsets" "statefulsets")
        for workload in "${workloads[@]}"; do
            if kubectl get "$workload" -n "$ns" -o json | jq -r '
                .items[] |
                select(has("spec") and has("template") and .spec.template.spec.hostPID == true) |
                "Resource: \(.metadata.name), Kind: '"$workload"'"
            ' > "$ns_dir/hostpid_${workload}.txt" 2>/dev/null; then
                if [[ -s "$ns_dir/hostpid_${workload}.txt" ]]; then
                    log "Workloads with hostPID enabled found in $workload in namespace '$ns'. See $ns_dir/hostpid_${workload}.txt." WARN
                else
                    log "No $workload with hostPID enabled found in namespace '$ns'." SUCCESS
                    rm -f "$ns_dir/hostpid_${workload}.txt"
                fi
            else
                log "Failed to retrieve $workload configurations in namespace '$ns'." ERROR
                rm -f "$ns_dir/hostpid_${workload}.txt"
            fi
        done
    done

    log "Completed check_hostpid_exploitability." SUCCESS
}
